CREATE TABLE IF NOT EXISTS users (
	Id SERIAL PRIMARY KEY,
	Name TEXT NOT NULL,
	Email TEXT NOT NULL UNIQUE,
	Phone TEXT,
	Password VARCHAR(255),
	Birthday DATE NOT NULL,
	CreatedAt TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
);
CREATE INDEX IF NOT EXISTS idx_users_email ON sessions(Email);

CREATE TYPE LEVEL as ENUM ('read', 'write', 'admin');

CREATE TABLE IF NOT EXISTS role_types (
	Id SERIAL PRIMARY KEY,
	Title TEXT NOT NULL,
	CreatedAt TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	AccessLevel LEVEL NOT NULL DEFAULT 'read'
);

CREATE TABLE IF NOT EXISTS roles (
	Id SERIAL PRIMARY KEY,
	UserId INTEGER NOT NULL REFERENCES users(Id) ON DELETE CASCADE,
	RoleTypeId INTEGER NOT NULL REFERENCES role_types(Id) ON DELETE CASCADE,
	CreatedAt TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
);
CREATE INDEX IF NOT EXISTS idx_roles_user_id ON sessions(UserId);
CREATE INDEX IF NOT EXISTS idx_roles_role_type_id ON sessions(RoleTypeId);

ALTER TABLE roles ADD IF NOT EXISTS FinishedAt TIMESTAMP WITH TIME ZONE;

CREATE TABLE IF NOT EXISTS sessions (
	Id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
	UserId INTEGER NOT NULL REFERENCES users(Id) ON DELETE CASCADE,
	CreatedAt TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	LastSeenAt TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	ExpiresAt TIMESTAMP WITH TIME ZONE NOT NULL,
	IpAddress INET,
	UserAgent TEXT,
	IsActive BOOLEAN NOT NULL DEFAULT TRUE
);
CREATE INDEX IF NOT EXISTS idx_sessions_user_id ON sessions(UserId);
CREATE INDEX IF NOT EXISTS idx_sessions_expires_at ON sessions(ExpiresAt);
