package views

import "github.com/audunhov/gokkreg/internal"
import "fmt"
import "reflect"

type TableConfig map[string]string

func levelString(level internal.Level) string {
	switch level {
	case internal.LevelRead:
		return "Lese"
	case internal.LevelWrite:
		return "Skrive"
	case internal.LevelAdmin:
		return "Administrator"
	}

	return "Ukjent"
}

func getField[T any](v *T, field string) string {
	r := reflect.ValueOf(v)
	f := reflect.Indirect(r).FieldByName(field)
	return f.String()
}

templ Table[T any](objects []T, config TableConfig) {
	<div class="mt-8 flow-root">
		<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
			<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
				<table class="min-w-full divide-y divide-gray-300">
					<thead>
						<tr>
							for k := range config {
								<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-3">{ config[k] }</th>
							}
							<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-3">
								<span class="sr-only">Edit</span>
							</th>
						</tr>
					</thead>
					<tbody class="bg-white">
						for _, object := range objects {
							<tr class="even:bg-gray-50">
								for k := range config {
									<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-3">{ getField(&object, k) }</td>
								}
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>
}

type RolesRow struct {
	Role     internal.Role
	RoleType internal.RoleType
	User     internal.User
}

func find[T any](slice []T, predicate func(val T) bool) *T {
	for _, val := range slice {
		if predicate(val) {
			return &val
		}
	}
	return nil
}

templ RolesPage(roles []internal.Role, roleTypes []internal.RoleType, users []internal.User) {
	{{
rows := make([]RolesRow, len(roles))
for i, role := range roles {
	roleType := find(roleTypes, func(rt internal.RoleType) bool {
		return rt.ID == role.Roletypeid
	})

	user := find(users, func(u internal.User) bool {
		return u.ID == role.Userid
	})

	rows[i] = RolesRow{
		Role:     role,
		RoleType: *roleType,
		User:     *user,
	}

}
	}}
	@Page("Verv") {
		<div>
			<div class="sm:flex sm:items-center">
				<div class="sm:flex-auto">
					<h1 class="text-base font-semibold text-gray-900">Verv</h1>
					<p class="mt-2 text-sm text-gray-700">Alle verv i Gamle Oslo Kaffe og Koding</p>
				</div>
				<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
					<button type="button" class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Nytt verv</button>
				</div>
			</div>
			<div class="mt-8 flow-root">
				<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
					<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
						<table class="min-w-full divide-y divide-gray-300">
							<thead>
								<tr>
									<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-3">Tittel</th>
									<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Holder</th>
									<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Siden</th>
									<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-3">
										<span class="sr-only">Edit</span>
									</th>
								</tr>
							</thead>
							<tbody class="bg-white">
								for _, row := range rows {
									<tr class="even:bg-gray-50">
										<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-3">{ row.RoleType.Title }</td>
										<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{ row.User.Name }</td>
										<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{ row.Role.Createdat.Time.Format("01.02.2006") }</td>
										<td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-3">
											<a href={ templ.SafeURL(fmt.Sprintf("/role/%d/", row.Role.ID)) } class="text-indigo-600 hover:text-indigo-900">Profil<span class="sr-only">, { fmt.Sprint(row.Role.Userid) }</span></a>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
		<form hx-post="/api/v1/role/">
			<select name="user">
				for _, user := range users {
					<option value={ fmt.Sprint(user.ID) }>{ user.Name }</option>
				}
			</select>
			<select name="role_type">
				for _, rt := range roleTypes {
					<option value={ fmt.Sprint(rt.ID) }>{ rt.Title }</option>
				}
			</select>
			<button type="submit">Ny rolle</button>
		</form>
	}
}

templ RolePage(user internal.User, role internal.Role, roleType internal.RoleType) {
	@Page(user.Name) {
		<p>{ user.Name } har vært { roleType.Title } siden { role.Createdat.Time.Format("01.02.2006") }</p>
	}
}

templ RoleTypesPage(roleTypes []internal.RoleType, levels []internal.Level) {
	@Page("Vervtyper") {
		<div class="sm:flex sm:items-center">
			<div class="sm:flex-auto">
				<h1 class="text-base font-semibold text-gray-900">Vervtyper</h1>
				<p class="mt-2 text-sm text-gray-700">Alle vervtyper i Gamle Oslo Kaffe og Koding</p>
			</div>
			<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
				<button type="button" class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Ny vervtype</button>
			</div>
		</div>
		<div class="mt-8 flow-root">
			<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
				<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
					<table class="min-w-full divide-y divide-gray-300">
						<thead>
							<tr>
								<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-3">Tittel</th>
								<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-3">Tilgangsnivå</th>
								<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-3">
									<span class="sr-only">Edit</span>
								</th>
							</tr>
						</thead>
						<tbody class="bg-white">
							for _, roleType := range roleTypes {
								<tr class="even:bg-gray-50">
									<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-3">{ roleType.Title }</td>
									<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-3">{ levelString(roleType.Accesslevel) }</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
		<form hx-post="/api/v1/role_type/">
			<div>
				<label for="title" class="block text-sm/6 font-medium text-gray-900">Tittel</label>
				<div class="mt-2">
					<input name="title" id="title" class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6" placeholder="Styremedlem"/>
				</div>
			</div>
			<div>
				<label for="access" class="block text-sm/6 font-medium text-gray-900">Tilgangsnivå</label>
				<div class="mt-2 grid grid-cols-1">
					<select id="access" name="access" class="col-start-1 row-start-1 w-full appearance-none rounded-md bg-white py-1.5 pl-3 pr-8 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6">
						for _, level := range levels {
							<option value={ fmt.Sprint(level) }>{ fmt.Sprint(level) }</option>
						}
					</select>
					<svg class="pointer-events-none col-start-1 row-start-1 mr-2 size-5 self-center justify-self-end text-gray-500 sm:size-4" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true" data-slot="icon">
						<path fill-rule="evenodd" d="M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd"></path>
					</svg>
				</div>
			</div>
			<button type="submit" class="rounded-md bg-indigo-600 px-2.5 py-1.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Ny type</button>
		</form>
	}
}
